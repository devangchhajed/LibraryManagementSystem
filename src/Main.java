
import java.awt.Cursor;
import java.awt.Image;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.Toolkit;
import java.io.IOException;

import static java.lang.Thread.sleep;
import java.net.URL;
import java.sql.*;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Devang Chhajed
 */
public final class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        welcc();
        datetime();
        updat();
        this.setIconImage(new ImageIcon(getClass().getResource("ico.png")).getImage());
        
    }
    private static final String VOICENAME="kevin16";
   
 
 
    
    public void updat(){
        
        
        Toolkit toolkit = Toolkit.getDefaultToolkit();

Image img = toolkit.getImage("cur1.png");

Point point = new Point(0,0);
        Cursor cursor=toolkit.createCustomCursor(img, point, "Cursor"); 

   setCursor(cursor);
        
        
        
   DefaultTableModel tm=(DefaultTableModel)newarrival.getModel();
        String searchf=search.getText();
int i, count=tm.getRowCount();
for(i=1;i<=count;i++)
{tm.removeRow(i);}
        
        
        
try{
Class.forName("java.sql.Driver");
Connection conn=DriverManager.getConnection("jdbc:mysql://localhost/devangproject","root","");
Statement s=conn.createStatement();
String q= "select * from books order by RegNo desc";
ResultSet rs=s.executeQuery(q);
while(rs.next())
{String nam=rs.getString("Name");
 tm.addRow(new Object[]{nam});
}
    
}catch(Exception e){
}
   

 DefaultTableModel rt=(DefaultTableModel)resulttable.getModel();
    try{
        Class.forName("java.sql.Driver");
Connection conn=DriverManager.getConnection("jdbc:mysql://localhost/devangproject","root","");
Statement s=conn.createStatement();
String q= "select * from books order by Name";
ResultSet rs=s.executeQuery(q);
while(rs.next())
{String nam=rs.getString("Name");
 String aut=rs.getString("Author");
 String pub=rs.getString("Publisher");
 String gen=rs.getString("Genere");
 rt.addRow(new Object[]{nam,aut,pub,gen});
        
        }
        }catch(Exception e){
        } 
    
    
    }
    
    
    
    
    
   
    public void welcc(){

          startmen.setVisible(false);
  
    
    try {
 // Open an audio input stream.
 URL url = this.getClass().getClassLoader().getResource("Sound/welcome.wav");
 AudioInputStream audioIn = AudioSystem.getAudioInputStream(url);
 // Get a sound clip resource.
 Clip clip = AudioSystem.getClip();
 // Open audio clip and load samples from the audio input stream.
 clip.open(audioIn);
 clip.start();
 } catch (Exception e1) {
 e1.printStackTrace();
 } 
   
   }
   


   
   
       public void datetime(){
           
           
           
           
    Calendar cal=new GregorianCalendar();
    int m=cal.get(Calendar.MONTH);
    int y=cal.get(Calendar.YEAR);
    int d=cal.get(Calendar.DAY_OF_MONTH);
    date.setText("Date : "+d+"/"+(m+1)+"/"+y);
    
    
    int sec=cal.get(Calendar.SECOND);
    int min=cal.get(Calendar.MINUTE);
    int hr=cal.get(Calendar.HOUR);
    int mm=cal.get(Calendar.AM);
    String mmm;
    if (mm==0)
        mmm="AM";
    else
        mmm="PM";
    time.setText("Time : "+hr+"-"+min+"-"+sec+" "+mmm);
    
    
    Thread clock;
        clock = new Thread(){
   @Override
   public void run(){
   for(;;){

         Calendar cal=new GregorianCalendar();
   int m=cal.get(Calendar.MONTH);
   int y=cal.get(Calendar.YEAR);
   int d=cal.get(Calendar.DAY_OF_MONTH);
   String month;

   date.setText("Date : "+d+"/"+(m+1)+"/"+y);
   
   
   int sec=cal.get(Calendar.SECOND);
   int min=cal.get(Calendar.MINUTE);
   int hr=cal.get(Calendar.HOUR);
   int mm=cal.get(Calendar.AM_PM);
   String mmm;
   if (mm==0)
       mmm="AM";
   else
       mmm="PM";
   time.setText("Time : "+hr+"-"+min+"-"+sec+" "+mmm);  
       try {
           sleep(1000);
       } catch (InterruptedException ex) {
           Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
       }
   }
         
       
   }
   };
    clock.start();
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        about = new javax.swing.JDialog();
        jLabel5 = new javax.swing.JLabel();
        FrameBar = new javax.swing.JLabel();
        startmen = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        userpic = new javax.swing.JLabel();
        userdisp = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        start = new javax.swing.JLabel();
        address = new javax.swing.JLabel();
        dateandtime = new javax.swing.JLabel();
        piclab = new javax.swing.JLabel();
        publisher = new javax.swing.JTextField();
        bname = new javax.swing.JTextField();
        aname = new javax.swing.JTextField();
        genere = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        dockcalc = new javax.swing.JLabel();
        docksettings = new javax.swing.JLabel();
        dockdeveloper = new javax.swing.JLabel();
        dockabout = new javax.swing.JLabel();
        dockkeyboard = new javax.swing.JLabel();
        docknotepad = new javax.swing.JLabel();
        dock = new javax.swing.JLabel();
        close = new javax.swing.JLabel();
        search = new javax.swing.JTextField();
        searchback = new javax.swing.JLabel();
        time = new javax.swing.JLabel();
        date = new javax.swing.JLabel();
        min = new javax.swing.JLabel();
        titlebar = new javax.swing.JLabel();
        tablename = new javax.swing.JLabel();
        tableauthor = new javax.swing.JLabel();
        tablepublisher = new javax.swing.JLabel();
        tablegenere = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        newarrival = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        resulttable = new javax.swing.JTable();
        tableback = new javax.swing.JLabel();
        redBackground = new javax.swing.JLabel();

        about.setMinimumSize(new java.awt.Dimension(944, 767));
        about.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Theme/sssssssssssss.jpg"))); // NOI18N
        about.getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Welcome Page");
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        FrameBar.setCursor(new java.awt.Cursor(java.awt.Cursor.MOVE_CURSOR));
        FrameBar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                FrameBarMousePressed(evt);
            }
        });
        FrameBar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                FrameBarMouseDragged(evt);
            }
        });
        getContentPane().add(FrameBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1300, 40));

        startmen.setOpaque(false);
        startmen.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons/notepad.gif"))); // NOI18N
        jLabel22.setText("                                     E-mail");
        jLabel22.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel22MouseReleased(evt);
            }
        });
        startmen.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 215, 24));

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons/notepad.gif"))); // NOI18N
        jLabel16.setText("                                 Notepad");
        jLabel16.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel16MouseReleased(evt);
            }
        });
        startmen.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 215, 24));

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons/about (2).png"))); // NOI18N
        jLabel15.setText("                                   About");
        jLabel15.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel15MouseReleased(evt);
            }
        });
        startmen.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, -1, 20));

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons/database.gif"))); // NOI18N
        jLabel14.setText("                    Import Database");
        jLabel14.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel14MouseReleased(evt);
            }
        });
        startmen.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 320, 205, 20));

        jLabel12.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel12MouseReleased(evt);
            }
        });
        startmen.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 350, 130, 30));

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons/home.png"))); // NOI18N
        startmen.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 50, 50));

        userpic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BackgroundImages/guest.png"))); // NOI18N
        userpic.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        startmen.add(userpic, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 30, 80, 80));

        userdisp.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        userdisp.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        userdisp.setText("Guest");
        startmen.add(userdisp, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 40, 80, 30));

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons/admin.png"))); // NOI18N
        jLabel18.setText("              Administrator Login");
        jLabel18.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel18MouseReleased(evt);
            }
        });
        startmen.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, 215, 24));

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons/calc.png"))); // NOI18N
        jLabel20.setText("                               Calculator");
        jLabel20.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel20MouseReleased(evt);
            }
        });
        startmen.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, 215, 24));

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons/keyboard1.png"))); // NOI18N
        jLabel19.setText("              On-Screen Keyboard");
        jLabel19.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel19MouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel19MouseReleased(evt);
            }
        });
        startmen.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 215, 24));

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons/developer.png"))); // NOI18N
        jLabel21.setText("                               Developer");
        jLabel21.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel21MouseReleased(evt);
            }
        });
        startmen.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 210, 24));

        start.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        start.setForeground(new java.awt.Color(255, 255, 255));
        start.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BackgroundImages/menu.png"))); // NOI18N
        startmen.add(start, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 20, 310, 380));

        getContentPane().add(startmen, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 210, 370, 400));

        address.setForeground(new java.awt.Color(0, 153, 153));
        address.setText("Book Library Management");
        getContentPane().add(address, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 20, -1, -1));

        dateandtime.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dateandtime.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dateandtimeMouseClicked(evt);
            }
        });
        getContentPane().add(dateandtime, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 620, 260, 30));
        getContentPane().add(piclab, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 220, 150, 140));

        publisher.setEditable(false);
        publisher.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        publisher.setText("Publisher");
        publisher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                publisherActionPerformed(evt);
            }
        });
        getContentPane().add(publisher, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 340, 150, 30));

        bname.setEditable(false);
        bname.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        bname.setText("Name ");
        bname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnameActionPerformed(evt);
            }
        });
        getContentPane().add(bname, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 220, 150, 30));

        aname.setEditable(false);
        aname.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        aname.setText("Author");
        aname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anameActionPerformed(evt);
            }
        });
        getContentPane().add(aname, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 260, 150, 30));

        genere.setEditable(false);
        genere.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        genere.setText("Genere");
        genere.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genereActionPerformed(evt);
            }
        });
        getContentPane().add(genere, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 300, 150, 30));

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BackgroundImages/viewdata.PNG"))); // NOI18N
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 140, 400, 250));

        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 110, 80));

        dockcalc.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dockcalc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dockcalcMouseClicked(evt);
            }
        });
        getContentPane().add(dockcalc, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 560, 40, 40));

        docksettings.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        docksettings.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                docksettingsMouseClicked(evt);
            }
        });
        getContentPane().add(docksettings, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 560, 40, 40));

        dockdeveloper.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dockdeveloper.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dockdeveloperMouseClicked(evt);
            }
        });
        getContentPane().add(dockdeveloper, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 560, 40, 40));

        dockabout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dockabout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dockaboutMouseClicked(evt);
            }
        });
        getContentPane().add(dockabout, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 560, 40, 40));

        dockkeyboard.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dockkeyboard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dockkeyboardMouseClicked(evt);
            }
        });
        getContentPane().add(dockkeyboard, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 560, 60, 40));

        docknotepad.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        docknotepad.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                docknotepadMouseClicked(evt);
            }
        });
        getContentPane().add(docknotepad, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 560, 40, 40));

        dock.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/dock.PNG"))); // NOI18N
        dock.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dockMouseClicked(evt);
            }
        });
        getContentPane().add(dock, new org.netbeans.lib.awtextra.AbsoluteConstraints(485, 506, 440, 170));

        close.setToolTipText("Close Window");
        close.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeMouseClicked(evt);
            }
        });
        getContentPane().add(close, new org.netbeans.lib.awtextra.AbsoluteConstraints(1330, 0, 30, 30));

        search.setBackground(new java.awt.Color(153, 255, 153));
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchKeyReleased(evt);
            }
        });
        getContentPane().add(search, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 80, 170, 27));

        searchback.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BackgroundImages/search.PNG"))); // NOI18N
        getContentPane().add(searchback, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 50, 230, 70));

        time.setForeground(new java.awt.Color(255, 255, 255));
        time.setText("Time");
        getContentPane().add(time, new org.netbeans.lib.awtextra.AbsoluteConstraints(1250, 623, 109, 20));

        date.setForeground(new java.awt.Color(255, 255, 255));
        date.setText("Date");
        getContentPane().add(date, new org.netbeans.lib.awtextra.AbsoluteConstraints(1140, 623, 99, 20));

        min.setToolTipText("Minimize Window");
        min.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        min.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minMouseClicked(evt);
            }
        });
        getContentPane().add(min, new org.netbeans.lib.awtextra.AbsoluteConstraints(1300, 0, 30, 30));

        titlebar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/MenuBar.png"))); // NOI18N
        getContentPane().add(titlebar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -35, -1, 200));

        tablename.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tablename.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tablenameMouseReleased(evt);
            }
        });
        getContentPane().add(tablename, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, 140, 50));

        tableauthor.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tableauthor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tableauthorMouseReleased(evt);
            }
        });
        getContentPane().add(tableauthor, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, 140, 50));

        tablepublisher.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tablepublisher.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tablepublisherMouseReleased(evt);
            }
        });
        getContentPane().add(tablepublisher, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, 140, 50));

        tablegenere.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tablegenere.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tablegenereMouseReleased(evt);
            }
        });
        getContentPane().add(tablegenere, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, 140, 50));

        newarrival.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "New Arrivals"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        newarrival.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newarrivalMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                newarrivalMouseReleased(evt);
            }
        });
        jScrollPane3.setViewportView(newarrival);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1180, 410, 140, 190));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BackgroundImages/log2.png"))); // NOI18N
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel1MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel1MouseReleased(evt);
            }
        });
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 590, 70, 60));

        resulttable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name of the Book", "Author", "Publisher", "Genre"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        resulttable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        resulttable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resulttableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(resulttable);

        getContentPane().add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 150, 560, 270));

        tableback.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BackgroundImages/tableback1.png"))); // NOI18N
        getContentPane().add(tableback, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 790, 350));

        redBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BackgroundImages/back3.png"))); // NOI18N
        getContentPane().add(redBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 650));

        setSize(new java.awt.Dimension(1364, 649));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyReleased
DefaultTableModel tm=(DefaultTableModel)resulttable.getModel();
String searchf=search.getText();

int i, count=tm.getRowCount();
for(i=1;i<count;i++)
{ tm.removeRow(0);
}
        
        
        
try{
Class.forName("java.sql.Driver");
Connection conn=DriverManager.getConnection("jdbc:mysql://localhost/devangproject","root","");
Statement s=conn.createStatement();
String q= "select * from books where Name like \""+searchf+"%\"";
ResultSet rs=s.executeQuery(q);
while(rs.next())
{String nam=rs.getString("Name");
 String aut=rs.getString("Author");
 String pub=rs.getString("Publisher");
 String gen=rs.getString("Genere");
 tm.addRow(new Object[]{nam,aut,pub,gen});
}
    
}catch(Exception e){
JOptionPane.showMessageDialog(null,e);}
        


        
        // TODO add your handling code here:
    }//GEN-LAST:event_searchKeyReleased

    private void closeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeMouseClicked
 try {
 // Open an audio input stream.
 URL url = this.getClass().getClassLoader().getResource("Sound/prog terminated.wav");
 AudioInputStream audioIn = AudioSystem.getAudioInputStream(url);
 // Get a sound clip resource.
 Clip clip = AudioSystem.getClip();
 // Open audio clip and load samples from the audio input stream.
 clip.open(audioIn);
 clip.start();
 } catch (Exception e1) {
 e1.printStackTrace();
 } 
        JOptionPane.showMessageDialog(null,"System Shuting Down..\nPress OK to Continue");
        System.exit(0);
        // TODO add your handling code here:
    }//GEN-LAST:event_closeMouseClicked

    private void minMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minMouseClicked
 try {
 // Open an audio input stream.
 URL url = this.getClass().getClassLoader().getResource("Sound/hibernation activated.wav");
 AudioInputStream audioIn = AudioSystem.getAudioInputStream(url);
 // Get a sound clip resource.
 Clip clip = AudioSystem.getClip();
 // Open audio clip and load samples from the audio input stream.
 clip.open(audioIn);
 clip.start();
 } catch (Exception e1) {
 e1.printStackTrace();
 } 
        this.setState(Main.ICONIFIED);
        // TODO add your handling code here:
    }//GEN-LAST:event_minMouseClicked

    private void jLabel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseEntered
ImageIcon ii = new ImageIcon(getClass().getResource("/BackgroundImages/log.png"));
     
jLabel1.setIcon(ii); 
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel1MouseEntered

    private void jLabel1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseExited
ImageIcon ii = new ImageIcon(getClass().getResource("/BackgroundImages/log2.png"));
     
jLabel1.setIcon(ii); 
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel1MouseExited

    private void jLabel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MousePressed
ImageIcon ii = new ImageIcon(getClass().getResource("/BackgroundImages/log2.png"));
     
jLabel1.setIcon(ii); 
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel1MousePressed

    private void jLabel1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseReleased
    
     if(startmen.isVisible())
     {
          startmen.setVisible(false);
          jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("BackgroundImages/log.png")));
     
     }
     else
     {
          startmen.setVisible(true);
               jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("BackgroundImages/log2.png")));
      }  
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/me/myimageapp/newpackage/image.png")));
        
        
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel1MouseReleased

    private void jLabel12MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseReleased
try {
 // Open an audio input stream.
 URL url = this.getClass().getClassLoader().getResource("Sound/shutting down.wav");
 AudioInputStream audioIn = AudioSystem.getAudioInputStream(url);
 // Get a sound clip resource.
 Clip clip = AudioSystem.getClip();
 // Open audio clip and load samples from the audio input stream.
 clip.open(audioIn);
 clip.start();
 } catch (Exception e1) {
 e1.printStackTrace();
 } 
        
        
        
        Runtime runtime = Runtime.getRuntime();
        try {
            Process proc = runtime.exec("shutdown -s -t 0");

            // TODO add your handling code here:
        } catch (Exception ex) {
            Logger.getLogger(Adminpanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel12MouseReleased

    private void jLabel14MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel14MouseReleased
dataimp s=new dataimp();
s.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel14MouseReleased

    private void jLabel15MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseReleased
about.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel15MouseReleased

    private void jLabel16MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel16MouseReleased
	Runtime runtime = Runtime.getRuntime();
        try {
            Process proc = runtime.exec("notepad");

            // TODO add your handling code here:
        } catch (IOException ex) {
            Logger.getLogger(Adminpanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel16MouseReleased

    private void publisherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_publisherActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_publisherActionPerformed

    private void bnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bnameActionPerformed

    private void anameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_anameActionPerformed

    private void genereActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genereActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_genereActionPerformed

    private void newarrivalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newarrivalMouseClicked

        
try{

int row=newarrival.getSelectedRow();
String tblclck=(newarrival.getModel().getValueAt(row, 0).toString());
Class.forName("java.sql.Driver");
Connection conn=DriverManager.getConnection("jdbc:mysql://localhost/devangproject","root","");
Statement s=conn.createStatement();
String q= "select * from books where Name =\""+ tblclck+"\"";
ResultSet rs=s.executeQuery(q);
if(rs.next())
 {bname.setText(rs.getString("Name"));
  aname.setText(rs.getString("Author"));
  genere.setText(rs.getString("Genere"));
  publisher.setText(rs.getString("Publisher"));
 }

}catch(Exception e){


}
        
        
        
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_newarrivalMouseClicked

    private void newarrivalMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newarrivalMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_newarrivalMouseReleased

    private void dockMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dockMouseClicked
     // TODO add your handling code here:
    }//GEN-LAST:event_dockMouseClicked

    private void jLabel18MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel18MouseReleased
Login s=new Login();
s.setVisible(true);
// TODO add your handling code here:
    }//GEN-LAST:event_jLabel18MouseReleased

    private void jLabel19MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel19MouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel19MouseReleased

    private void jLabel20MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel20MouseReleased
        try
        {
            Process p;
            String sysroot = System.getenv("SystemRoot");
            p = Runtime.getRuntime().exec("cmd /c " + sysroot + "/system32/calc.exe");
        }
        catch (Exception ex)
        {

        } 
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel20MouseReleased

    private void jLabel19MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel19MouseClicked
        try
        {
            Process p;
            String sysroot = System.getenv("SystemRoot");
            p = Runtime.getRuntime().exec("cmd /c " + sysroot + "/system32/osk.exe");
        }
        catch (Exception ex)
        {

        } 
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel19MouseClicked

    private void jLabel21MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel21MouseReleased
developer s=new developer();
s.setVisible(true);
// TODO add your handling code here:
    }//GEN-LAST:event_jLabel21MouseReleased

    private void docknotepadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_docknotepadMouseClicked
	Runtime runtime = Runtime.getRuntime();
        try {
            Process proc = runtime.exec("notepad");

            // TODO add your handling code here:
        } catch (IOException ex) {
            Logger.getLogger(Adminpanel.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_docknotepadMouseClicked

    private void dockcalcMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dockcalcMouseClicked
        try
        {
            Process p;
            String sysroot = System.getenv("SystemRoot");
            p = Runtime.getRuntime().exec("cmd /c " + sysroot + "/system32/calc.exe");
        }
        catch (Exception ex)
        {

        } 
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_dockcalcMouseClicked

    private void dockkeyboardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dockkeyboardMouseClicked
        try
        {
            Process p;
            String sysroot = System.getenv("SystemRoot");
            p = Runtime.getRuntime().exec("cmd /c " + sysroot + "/system32/osk.exe");
        }
        catch (Exception ex)
        {

        }           // TODO add your handling code here:
    }//GEN-LAST:event_dockkeyboardMouseClicked

    private void dockdeveloperMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dockdeveloperMouseClicked
Email s=new Email();
s.setVisible(true);

// TODO add your handling code here:
    }//GEN-LAST:event_dockdeveloperMouseClicked
private void click(){
   try {
 // Open an audio input stream.
 URL url = this.getClass().getClassLoader().getResource("Sound/click.wav");
 AudioInputStream audioIn = AudioSystem.getAudioInputStream(url);
 // Get a sound clip resource.
 Clip clip = AudioSystem.getClip();
 // Open audio clip and load samples from the audio input stream.
 clip.open(audioIn);
 clip.start();
 } catch (Exception e1) {
 e1.printStackTrace();
 } 

}
    private void resulttableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resulttableMouseClicked
click();
   
        try{

            int row=resulttable.getSelectedRow();
            String tblclck=(resulttable.getModel().getValueAt(row, 0).toString());
            Class.forName("java.sql.Driver");
            Connection conn=DriverManager.getConnection("jdbc:mysql://localhost/devangproject","root","");
            java.sql.Statement s=conn.createStatement();
            String q= "select * from books where Name =\""+ tblclck+"\"";
            ResultSet rs=s.executeQuery(q);
            while(rs.next())
            {bname.setText(rs.getString("Name"));
                aname.setText(rs.getString("Author"));
                genere.setText(rs.getString("Genere"));
                publisher.setText(rs.getString("Publisher"));
                String path3=rs.getString("photo");

                if(path3.compareTo("null")==0)
                {    ImageIcon ii = new ImageIcon(getClass().getResource("/Images/bookdef.png"));

                    piclab.setIcon(ii);

                }else{

                    ImageIcon image = new ImageIcon(path3);
                    // Get width and height of picLabel
                    Rectangle rect = piclab.getBounds();
                    // Scaling the Image to fit in the picLabel
                    Image scaledImage = image.getImage().getScaledInstance(rect.width, rect.height, Image.SCALE_DEFAULT);
                    // Converting the image back to ImageIcon to make it acceptable by picLabel
                    image = new ImageIcon(scaledImage);
                    piclab.setIcon(image);

                }

            }

        }catch(Exception e){
        }






               // TODO add your handling code here:
    }//GEN-LAST:event_resulttableMouseClicked
int xMouse, yMouse;
    private void FrameBarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FrameBarMousePressed
xMouse=evt.getX();
yMouse=evt.getY();
    }//GEN-LAST:event_FrameBarMousePressed

    private void FrameBarMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FrameBarMouseDragged
int x=evt.getXOnScreen();
int y=evt.getYOnScreen();

this.setLocation(x-xMouse, y-yMouse);
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_FrameBarMouseDragged

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchActionPerformed

    private void searchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyPressed

        // TODO add your handling code here:
    }//GEN-LAST:event_searchKeyPressed

    private void tablenameMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablenameMouseReleased
click();
        tableback.setIcon(new ImageIcon("src/BackgroundImages/tableback1.png"));
        DefaultTableModel tm=(DefaultTableModel)resulttable.getModel();
        int i, count=tm.getRowCount();
for(i=0;i<count;i++)
{ tm.removeRow(0);
}
        
        try{
        Class.forName("java.sql.Driver");
Connection conn=DriverManager.getConnection("jdbc:mysql://localhost/devangproject","root","");
Statement s=conn.createStatement();
String q= "select * from books order by Name";
ResultSet rs=s.executeQuery(q);
while(rs.next())
{String nam=rs.getString("Name");
 String aut=rs.getString("Author");
 String pub=rs.getString("Publisher");
 String gen=rs.getString("Genere");
 tm.addRow(new Object[]{nam,aut,pub,gen});
        
        }
        }catch(Exception e){
        JOptionPane.showMessageDialog(null,e);
        }
        
        
        
        
        
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_tablenameMouseReleased

    private void tableauthorMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableauthorMouseReleased
 click();
       tableback.setIcon(new ImageIcon("src/BackgroundImages/tableback2.png"));
        
        DefaultTableModel tm=(DefaultTableModel)resulttable.getModel();
        
        int i, count=tm.getRowCount();
for(i=0;i<count;i++)
{ tm.removeRow(0);
}
        try{
        Class.forName("java.sql.Driver");
Connection conn=DriverManager.getConnection("jdbc:mysql://localhost/devangproject","root","");
Statement s=conn.createStatement();
String q= "select * from books order by Author";
ResultSet rs=s.executeQuery(q);
while(rs.next())
{String nam=rs.getString("Name");
 String aut=rs.getString("Author");
 String pub=rs.getString("Publisher");
 String gen=rs.getString("Genere");
 tm.addRow(new Object[]{nam,aut,pub,gen});
        
        }
        }catch(Exception e){
        JOptionPane.showMessageDialog(null,e);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_tableauthorMouseReleased

    private void tablepublisherMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablepublisherMouseReleased
click();
 tableback.setIcon(new ImageIcon("src/BackgroundImages/tableback3.png"));
        DefaultTableModel tm=(DefaultTableModel)resulttable.getModel();
        int i, count=tm.getRowCount();
for(i=0;i<count;i++)
{ tm.removeRow(0);
}
        
        try{
        Class.forName("java.sql.Driver");
Connection conn=DriverManager.getConnection("jdbc:mysql://localhost/devangproject","root","");
Statement s=conn.createStatement();
String q= "select * from books order by Publisher";
ResultSet rs=s.executeQuery(q);
while(rs.next())
{String nam=rs.getString("Name");
 String aut=rs.getString("Author");
 String pub=rs.getString("Publisher");
 String gen=rs.getString("Genere");
 tm.addRow(new Object[]{nam,aut,pub,gen});
        
        }
        }catch(Exception e){
        JOptionPane.showMessageDialog(null,e);
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_tablepublisherMouseReleased

    private void tablegenereMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablegenereMouseReleased
 click();
tableback.setIcon(new ImageIcon("src/BackgroundImages/tableback4.png"));
        DefaultTableModel tm=(DefaultTableModel)resulttable.getModel();
        int i, count=tm.getRowCount();
for(i=0;i<count;i++)
{ tm.removeRow(0);
}
        
        try{
        Class.forName("java.sql.Driver");
Connection conn=DriverManager.getConnection("jdbc:mysql://localhost/devangproject","root","");
Statement s=conn.createStatement();
String q= "select * from books order by Genere";
ResultSet rs=s.executeQuery(q);
while(rs.next())
{String nam=rs.getString("Name");
 String aut=rs.getString("Author");
 String pub=rs.getString("Publisher");
 String gen=rs.getString("Genere");
 tm.addRow(new Object[]{nam,aut,pub,gen});
        
        }
        }catch(Exception e){
        JOptionPane.showMessageDialog(null,e);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_tablegenereMouseReleased

    private void dockaboutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dockaboutMouseClicked
about s=new about();
s.setVisible(true);
        
        // TODO add your handling code here:
    }//GEN-LAST:event_dockaboutMouseClicked

    private void docksettingsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_docksettingsMouseClicked
JOptionPane.showMessageDialog(null,"You must Login to use this Feature.");
        // TODO add your handling code here:
    }//GEN-LAST:event_docksettingsMouseClicked

    private void jLabel22MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel22MouseReleased
        Email s=new Email();
        s.setVisible(true);

        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel22MouseReleased

    private void dateandtimeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dateandtimeMouseClicked
Clock s=new Clock();
s.setVisible(true);
        
        // TODO add your handling code here:
    }//GEN-LAST:event_dateandtimeMouseClicked

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        try {
            java.awt.Desktop.getDesktop().browse(java.net.URI.create("https://www.facebook.com/thevernex"));
        }catch(Exception e){}

        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel3MouseClicked

  
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                
                 try{
                Thread.sleep(2500);
                }catch(Exception e){}
                
                
                new Main().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel FrameBar;
    private javax.swing.JDialog about;
    private javax.swing.JLabel address;
    private javax.swing.JTextField aname;
    private javax.swing.JTextField bname;
    private javax.swing.JLabel close;
    private javax.swing.JLabel date;
    private javax.swing.JLabel dateandtime;
    private javax.swing.JLabel dock;
    private javax.swing.JLabel dockabout;
    private javax.swing.JLabel dockcalc;
    private javax.swing.JLabel dockdeveloper;
    private javax.swing.JLabel dockkeyboard;
    private javax.swing.JLabel docknotepad;
    private javax.swing.JLabel docksettings;
    private javax.swing.JTextField genere;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel min;
    private javax.swing.JTable newarrival;
    private javax.swing.JLabel piclab;
    private javax.swing.JTextField publisher;
    private javax.swing.JLabel redBackground;
    private javax.swing.JTable resulttable;
    private javax.swing.JTextField search;
    private javax.swing.JLabel searchback;
    private javax.swing.JLabel start;
    private javax.swing.JPanel startmen;
    private javax.swing.JLabel tableauthor;
    private javax.swing.JLabel tableback;
    private javax.swing.JLabel tablegenere;
    private javax.swing.JLabel tablename;
    private javax.swing.JLabel tablepublisher;
    private javax.swing.JLabel time;
    private javax.swing.JLabel titlebar;
    private javax.swing.JLabel userdisp;
    private javax.swing.JLabel userpic;
    // End of variables declaration//GEN-END:variables

    private String getString(String publisher) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
