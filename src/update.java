
import java.awt.Cursor;
import java.awt.Image;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.Toolkit;
import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Devang Chhajed
 */
public final class update extends javax.swing.JFrame {

    /**
     * Creates new form insert
     */
    public update() {
        initComponents();
        update();
         this.setIconImage(new ImageIcon(getClass().getResource("ico.png")).getImage());
        Toolkit toolkit = Toolkit.getDefaultToolkit();

Image img = toolkit.getImage("cur1.png");

Point point = new Point(0,0);
        Cursor cursor=toolkit.createCustomCursor(img, point, "Cursor"); 

   setCursor(cursor);
        
    }

    
    
    
    
    
    public String path="/Images/bookdef.png";
    public void update(){

    deleteClass ob=new deleteClass();
  try{

            
            Class.forName("java.sql.Driver");
            Connection conn=DriverManager.getConnection("jdbc:mysql://localhost/devangproject","root","");
            java.sql.Statement s=conn.createStatement();
            String q= "select * from books where RegNo =\""+ob.tbldel+"\"";
            ResultSet rs=s.executeQuery(q);
            while(rs.next())
            {name.setText(rs.getString("Name"));
                author.setText(rs.getString("Author"));
                genre.setText(rs.getString("Genere"));
                publisher.setText(rs.getString("Publisher"));
                int tty=rs.getInt("RegNo");
                regno.setText(tty+"");
                
                
                  String path=rs.getString("photo");

                if(path.compareTo("null")==0)
                { path="/Images/bookdef.png";

                }                

                    ImageIcon image = new ImageIcon(path);
                    // Get width and height of picLabel
                    // Scaling the Image to fit in the picLabel
                    Image scaledImage = image.getImage().getScaledInstance(190, 231, Image.SCALE_DEFAULT);
                    // Converting the image back to ImageIcon to make it acceptable by picLabel
                    image = new ImageIcon(scaledImage);
                    photo.setIcon(image);
               

            }

        }catch(Exception e){
 JOptionPane.showMessageDialog(null, e);
          
        }
    
    }
    
    
    
    
    
    
    
    
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        regno = new javax.swing.JTextField();
        name = new javax.swing.JTextField();
        genre = new javax.swing.JTextField();
        author = new javax.swing.JTextField();
        photo = new javax.swing.JLabel();
        publisher = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Update Book Details");
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton2.setText("Upload Pic");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 310, -1, -1));

        regno.setEditable(false);
        getContentPane().add(regno, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 115, 183, 30));
        getContentPane().add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 170, 183, 30));
        getContentPane().add(genre, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 280, 183, 30));

        author.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                authorActionPerformed(evt);
            }
        });
        getContentPane().add(author, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 225, 183, 30));
        getContentPane().add(photo, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 130, 190, 230));
        getContentPane().add(publisher, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 334, 183, 30));

        jButton1.setText("Update Details");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 390, 140, 40));

        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 0, 40, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BackgroundImages/update.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 690, -1));

        setSize(new java.awt.Dimension(686, 477));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void authorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_authorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_authorActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String book=name.getText();
        String author=name.getText();
        String publi=publisher.getText();
        String gene=genre.getText();
     JOptionPane.showMessageDialog(null, path);
        String disp;

deleteClass ob=new deleteClass();
        try{
            Class.forName("java.sql.Driver");
            Connection conn=DriverManager.getConnection("jdbc:mysql://localhost/devangproject","root","");
            java.sql.Statement s=conn.createStatement();
            String q= "update books set Name=\""+book+"\", Author=\""+author+"\", Publisher=\""+publi+"\", Genere=\""+gene+"\", photo=\""+path+"\" where RegNo="+ob.tbldel;
JOptionPane.showMessageDialog(null, q);
            int rs=s.executeUpdate(q);
            if (rs>0)
            JOptionPane.showMessageDialog(null, "Data Updated Successfully..");
            else
            JOptionPane.showMessageDialog(null, "Data Not Updated..");

        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
        
        
        
        
        
        
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
 File f;
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
 // Setting user's Picture folder as the current directory
        JFileChooser chooser = new JFileChooser(System.getProperty("user.home") + System.getProperty("file.separator")+ "Pictures");
        
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY); // We're not dealing with directories
        chooser.setAcceptAllFileFilterUsed(false); // Disabling 'All Files' Filter
        chooser.setDialogTitle("Choose a photo"); // Setting a custom title for our chooser
        chooser.setApproveButtonText("Upload"); // Replacing 'Open' with 'Upload'
              
        //chooser.setFileHidingEnabled(false);  // Show hidden files        
        //chooser.setMultiSelectionEnabled(true); // Allow multiple selections by pressing CTRL
        
        // Display all directories but only gif, jpg, jpeg or png files.
        chooser.setFileFilter(new FileFilter() {

            @Override
            public String getDescription() {
                return "All supported image formats";
            }

            @Override
            public boolean accept(File f) {
                if (f.isDirectory()) {
                    return true;
                } else {
                    return f.getName().toLowerCase().endsWith(".png")
                            || f.getName().toLowerCase().endsWith(".jpeg")
                            || f.getName().toLowerCase().endsWith(".jpg")
                            || f.getName().toLowerCase().endsWith(".gif");
                }
            }
        }); 
       
        // Show Dialog and store result in res
        int res = chooser.showOpenDialog(this);
        
        // Revert back to Metal L&F
      
        
        // If user clicked on Upload
        if (res == JFileChooser.APPROVE_OPTION) {            
            File file = chooser.getSelectedFile();
            // Creating ImageIcon out of the selected file
            
             path=file.getAbsolutePath();
            if(path.isEmpty())
                { path="/Images/bookdef.png";

                }
            
            
            ImageIcon image = new ImageIcon(path);
            // Get width and height of picLabel
            Rectangle rect = photo.getBounds();
            // Scaling the Image to fit in the picLabel
            Image scaledImage = image.getImage().getScaledInstance(rect.width, rect.height, Image.SCALE_DEFAULT);
            // Converting the image back to ImageIcon to make it acceptable by picLabel
            image = new ImageIcon(scaledImage);
           photo.setIcon(image);
            path=file.getAbsolutePath().replace('\\','/');
            
             
            
            
            
            
            
            
        } else {  // If the user clicked on cancel
            JOptionPane.showMessageDialog(this, "Dialog cancelled by the user");
        }       
        
        
        
                // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel4MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(insert.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(insert.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(insert.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(insert.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new insert().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField author;
    private javax.swing.JTextField genre;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField name;
    private javax.swing.JLabel photo;
    private javax.swing.JTextField publisher;
    private javax.swing.JTextField regno;
    // End of variables declaration//GEN-END:variables
}
